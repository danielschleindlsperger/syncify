{
  "openapi": "3.0.3",
  "info": {
    "title": "Spotify Web API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.spotify.com/v1"
    }
  ],
  "paths": {
    "/artists": {
      "get": {
        "summary": "Get Multiple Artists",
        "description": "Get Spotify catalog information for several artists based on their Spotify IDs.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of the Spotify IDs for the artists. Maximum: 50 IDs.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "0OdUWJ0sBjDrqHygGUXeCF,0OdUWJ0sBjDrqHygGUXeCF"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/artists/{id}": {
      "get": {
        "summary": "Get an Artist",
        "description": "Get Spotify catalog information for a single artist identified by their unique Spotify ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            },
            "example": "0OdUWJ0sBjDrqHygGUXeCF"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/artist"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    },
    "/tracks": {
      "get": {
        "summary": "Get Several Tracks",
        "description": "Get Spotify catalog information for multiple tracks based on their Spotify IDs.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of the Spotify IDs for the tracks. Maximum: 50 IDs.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "0OdUWJ0sBjDrqHygGUXeCF,0OdUWJ0sBjDrqHygGUXeCF"
          },
          {
            "name": "market",
            "in": "query",
            "description": "An ISO 3166-1 alpha-2 country code or the string from_token. Provide this parameter if you want to apply Track Relinking.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            },
            "example": "SE"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get Current User's Profile",
        "description": "Get detailed profile information about the current user (including the current user’s username).",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user_private"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "followers": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint providing full details of the followers; null if not available. Please note that this will always be set to null, as the Web API does not support it at the moment."
          },
          "total": {
            "type": "integer",
            "description": "The total number of followers.",
            "example": 306565
          }
        },
        "description": "Information about the followers of the artist."
      },
      "image": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "The image height in pixels. If unknown: null or not returned.",
            "example": 816
          },
          "width": {
            "type": "integer",
            "description": "The image width in pixels. If unknown: null or not returned.",
            "example": 1000
          },
          "url": {
            "type": "string",
            "description": "The source URL of the image.",
            "example": "https://i.scdn.co/image/eb266625dab075341e8c4378a177a27370f91903"
          }
        }
      },
      "artist": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The object type: \"artist\"",
            "enum": ["artist"]
          },
          "id": {
            "type": "string",
            "description": "The Spotify ID for the artist.",
            "example": "0OdUWJ0sBjDrqHygGUXeCF"
          },
          "name": {
            "type": "string",
            "description": "The name of the artist.",
            "example": "Band of Horses"
          },
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint providing full details of the artist.",
            "example": "https://api.spotify.com/v1/artists/0OdUWJ0sBjDrqHygGUXeCF"
          },
          "uri": {
            "type": "string",
            "description": "The Spotify URI for the artist.",
            "example": "spotify:artist:0OdUWJ0sBjDrqHygGUXeCF"
          },
          "external_urls": {
            "type": "object",
            "description": "Known external URLs for this artist.",
            "example": {
              "spotify": "https://open.spotify.com/artist/0OdUWJ0sBjDrqHygGUXeCF"
            }
          },
          "followers": {
            "$ref": "#/components/schemas/followers"
          },
          "genres": {
            "type": "array",
            "description": "A list of the genres the artist is associated with. For example: \"Prog Rock\" , \"Post-Grunge\". (If not yet classified, the array is empty.)",
            "example": ["Prog Rock", "Post-Grunge"],
            "items": {
              "type": "string"
            }
          },
          "images": {
            "type": "array",
            "description": "Images of the artist in various sizes, widest first.",
            "items": {
              "$ref": "#/components/schemas/image"
            }
          },
          "popularity": {
            "type": "integer",
            "description": "The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist’s popularity is calculated from the popularity of all the artist’s tracks.",
            "example": 59
          }
        }
      },
      "artist_simplified": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The object type: \"artist\"",
            "enum": ["artist"]
          },
          "id": {
            "type": "string",
            "description": "The Spotify ID for the artist.",
            "example": "0OdUWJ0sBjDrqHygGUXeCF"
          },
          "name": {
            "type": "string",
            "description": "The name of the artist.",
            "example": "Band of Horses"
          },
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint providing full details of the artist.",
            "example": "https://api.spotify.com/v1/artists/0OdUWJ0sBjDrqHygGUXeCF"
          },
          "uri": {
            "type": "string",
            "description": "The Spotify URI for the artist.",
            "example": "spotify:artist:0OdUWJ0sBjDrqHygGUXeCF"
          },
          "external_urls": {
            "type": "object",
            "description": "Known external URLs for this artist.",
            "example": {
              "spotify": "https://open.spotify.com/artist/0OdUWJ0sBjDrqHygGUXeCF"
            }
          }
        }
      },
      "track_full": {
        "type": "object",
        "properties": {
          "album": {
            "$ref": "#/components/schemas/album_simplified"
          },
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/artist_simplified"
            }
          },
          "available_markets": {
            "type": "array",
            "description": "A list of the countries in which the track can be played, identified by their ISO 3166-1 alpha-2 code.",
            "example": ["ES", "DE"],
            "items": {
              "type": "string"
            }
          },
          "disc_number": {
            "type": "integer",
            "description": "The disc number (usually 1 unless the album consists of more than one disc).",
            "example": 1
          },
          "duration_ms": {
            "type": "integer",
            "description": "The track length in milliseconds.",
            "example": 276773
          },
          "explicit": {
            "type": "boolean",
            "description": "Whether or not the track has explicit lyrics ( true = yes it does; false = no it does not OR unknown).",
            "example": false
          },
          "external_ids": {
            "type": "object",
            "description": "Known external IDs for the track.",
            "example": {
              "isrc": "USUM71703861"
            }
          },
          "external_urls": {
            "type": "object",
            "description": "Known external URLs for this track.",
            "example": {
              "spotify": "https://open.spotify.com/track/11dFghVXANMlKmJXsNCbNl"
            }
          },
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint providing full details of the track.",
            "example": "https://api.spotify.com/v1/tracks/11dFghVXANMlKmJXsNCbNl"
          },
          "id": {
            "type": "string",
            "description": "The Spotify ID for the track.",
            "example": "11dFghVXANMlKmJXsNCbNl"
          },
          "is_playable": {
            "type": "boolean",
            "description": "Part of the response when Track Relinking is applied. If true , the track is playable in the given market. Otherwise false.",
            "example": true
          },
          "linked_from": {
            "$ref": "#/components/schemas/track_link"
          },
          "restrictions": {
            "type": "object",
            "description": "Part of the response when Track Relinking is applied, the original track is not available in the given market, and Spotify did not have any tracks to relink it with. The track response will still contain metadata for the original track, and a restrictions object containing the reason why the track is not available: \"restrictions\" : {\"reason\" : \"market\"}",
            "example": {
              "reason": "market"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the track.",
            "example": "Cut To The Feeling"
          },
          "popularity": {
            "type": "integer",
            "description": "The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are. Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. Note that the popularity value may lag actual popularity by a few days: the value is not updated in real time.",
            "example": 59
          },
          "preview_url": {
            "type": "string",
            "description": "A link to a 30 second preview (MP3 format) of the track. Can be null",
            "example": "https://p.scdn.co/mp3-preview/3eb16018c2a700240e9dfb8817b6f2d041f15eb1?cid=774b29d4f13844c495f206cafdad9c86"
          },
          "track_number": {
            "type": "integer",
            "description": "The number of the track. If an album has several discs, the track number is the number on the specified disc.",
            "example": 5
          },
          "type": {
            "type": "string",
            "description": "The object type: “track”.",
            "example": "track",
            "enum": ["track"]
          },
          "uri": {
            "type": "string",
            "description": "The Spotify URI for the track.",
            "example": "spotify:track:11dFghVXANMlKmJXsNCbNl"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether or not the track is from a local file."
          }
        }
      },
      "track_link": {
        "type": "object",
        "properties": {
          "external_urls": {
            "type": "object",
            "description": "Known external URLs for this track.",
            "example": {
              "spotify": "https://open.spotify.com/track/11dFghVXANMlKmJXsNCbNl"
            }
          },
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint providing full details of the track.",
            "example": "https://api.spotify.com/v1/tracks/11dFghVXANMlKmJXsNCbNl"
          },
          "id": {
            "type": "string",
            "description": "The Spotify ID for the track.",
            "example": "11dFghVXANMlKmJXsNCbNl"
          },
          "type": {
            "type": "string",
            "description": "The object type: “track”.",
            "example": "track",
            "enum": ["track"]
          },
          "uri": {
            "type": "string",
            "description": "The Spotify URI for the track.",
            "example": "spotify:track:11dFghVXANMlKmJXsNCbNl"
          }
        }
      },
      "album_simplified": {
        "type": "object",
        "properties": {
          "album_group": {
            "type": "string",
            "description": "The field is present when getting an artist’s albums. Possible values are “album”, “single”, “compilation”, “appears_on”. Compare to album_type this field represents relationship between the artist and the album.",
            "example": "album",
            "enum": ["album", "single", "compilation", "appears_on"]
          },
          "album_type": {
            "type": "string",
            "description": "The type of the album: one of “album”, “single”, or “compilation”.",
            "example": "album",
            "enum": ["album", "single", "compilation", "appears_on"]
          },
          "artists": {
            "type": "array",
            "description": "The artists of the album. Each artist object includes a link in href to more detailed information about the artist.",
            "items": {
              "$ref": "#/components/schemas/artist_simplified"
            }
          },
          "available_markets": {
            "type": "array",
            "description": "The markets in which the album is available: ISO 3166-1 alpha-2 country codes. Note that an album is considered available in a market when at least 1 of its tracks is available in that market.",
            "example": ["ES", "SE", "DE"],
            "items": {
              "type": "string"
            }
          },
          "external_urls": {
            "type": "object",
            "description": "Known external URLs for this album.",
            "example": {
              "spotify": "https://open.spotify.com/album/6SSSF9Y6MiPdQoxqBptrR2"
            }
          },
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint providing full details of the album.",
            "example": "https://api.spotify.com/v1/albums/6SSSF9Y6MiPdQoxqBptrR2"
          },
          "id": {
            "type": "string",
            "description": "The Spotify ID for the album.",
            "example": "6SSSF9Y6MiPdQoxqBptrR2"
          },
          "images": {
            "type": "array",
            "description": "The cover art for the album in various sizes, widest first.",
            "items": {
              "$ref": "#/components/schemas/image"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the album. In case of an album takedown, the value may be an empty string.",
            "example": "Kiss"
          },
          "release_date": {
            "type": "string",
            "description": "The date the album was first released, for example 1981. Depending on the precision, it might be shown as 1981-12 or 1981-12-15.",
            "example": "1981-12-15"
          },
          "release_date_precision": {
            "type": "string",
            "description": "The precision with which release_date value is known: year , month , or day.",
            "example": "day",
            "enum": ["year", "month", "day"]
          },
          "restrictions": {
            "type": "object",
            "description": "Part of the response when Track Relinking is applied, the original track is not available in the given market, and Spotify did not have any tracks to relink it with. The track response will still contain metadata for the original track, and a restrictions object containing the reason why the track is not available: \"restrictions\" : {\"reason\" : \"market\"}",
            "example": {
              "reason": "market"
            }
          },
          "type": {
            "type": "string",
            "description": "The object type: “album”",
            "example": "album",
            "enum": ["album"]
          },
          "uri": {
            "type": "string",
            "description": "The Spotify URI for the album.",
            "example": "spotify:album:6SSSF9Y6MiPdQoxqBptrR2"
          }
        }
      },
      "user_private": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country of the user, as set in the user’s account profile. An ISO 3166-1 alpha-2 country code. This field is only available when the current user has granted access to the user-read-private scope.",
            "example": "SE"
          },
          "display_name": {
            "type": "string",
            "description": "The name displayed on the user’s profile. null if not available.",
            "example": "JM Wizzler"
          },
          "email": {
            "type": "string",
            "description": "The user’s email address, as entered by the user when creating their account. Important! This email address is unverified; there is no proof that it actually belongs to the user. This field is only available when the current user has granted access to the user-read-email scope.",
            "example": "email@example.com"
          },
          "external_urls": {
            "type": "object",
            "description": "Known external URLs for this user.",
            "example": {
              "spotify": "https://open.spotify.com/user/wizzler"
            }
          },
          "followers": {
            "$ref": "#/components/schemas/followers"
          },
          "href": {
            "type": "string",
            "description": "A link to the Web API endpoint for this user.",
            "example": "https://api.spotify.com/v1/users/wizzler"
          },
          "id": {
            "type": "string",
            "description": "The Spotify user ID for the user",
            "example": "wizzler"
          },
          "images": {
            "type": "array",
            "description": "The user’s profile image.",
            "items": {
              "$ref": "#/components/schemas/image"
            }
          },
          "product": {
            "type": "string",
            "description": "The user’s Spotify subscription level: “premium”, “free”, etc. (The subscription level “open” can be considered the same as “free”.) This field is only available when the current user has granted access to the user-read-private scope.",
            "example": "premium",
            "enum": ["premium", "free", "open"]
          },
          "type": {
            "type": "string",
            "description": "The object type: “user”",
            "example": "user",
            "enum": ["user"]
          },
          "uri": {
            "type": "string",
            "description": "The Spotify URI for the user.",
            "example": "spotify:user:wizzler"
          }
        }
      },
      "inline_response_200": {
        "properties": {
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/artist"
            }
          }
        }
      },
      "inline_response_200_1": {
        "properties": {
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/track_full"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerToken": {
        "type": "http",
        "description": "A valid user access token or your client credentials. Example: 'Authorization: Bearer BQB6AqHQUoEcX1XWHRX5knRFj75ryKPLTMieLPy_WjZyChM7FrG_SNwxya0RL8WCtn07Zog46EXUzY48KAw'",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
