name: CI

on: [push]

jobs:
  checks:
    name: Run checks
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Unit Tests
        run: npm t
      - name: Typecheck
        run: npm run typecheck
      - name: Lint
        run: npm run lint
      - name: E2E Tests
        env:
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN_A: ${{ secrets.SPOTIFY_REFRESH_TOKEN_A }}
        run: cp .env.test .env.build && npm run migrate up && npm run e2e:ci

  build-and-push-container:
    name: Build and push container
    runs-on: ubuntu-latest
    # TODO: re-enable
    # needs: checks
    steps:
      - name: Determine version
        id: version
        uses: ./.github/actions/version-commit
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Scaleway Container Registry
        uses: docker/login-action@v1
        with:
          registry: 'rg.nl-ams.scw.cloud/petprojects'
          username: nologin
          password: ${{ secrets.SCALEWAY_SECRET_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: 'latest,${{ steps.version.outputs.version }}'

  # Deploy existing container: job only runs on master after checks are successful
  # TODO: adjust deployment, migrations
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: checks
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout source
        uses: actions/checkout@v1
      - name: Setting up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Migrate database
        run: npm run migrate up
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v19
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
